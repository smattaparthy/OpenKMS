@page "/login"
@rendermode InteractiveServer
@using OpenKMS.Models.Requests
@using OpenKMS.Models.Responses
@using OpenKMS.Services
@inject OpenKMS.Services.AuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Login - OpenKMS</PageTitle>

<section class="min-vh-100 d-flex align-items-center bg-secondary">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-7 col-lg-5">
                <div class="card shadow-md">
                    <div class="card-header">
                        <h2 class="m-0" style="font-size: var(--text-2xl); font-weight: var(--font-bold);">OpenKMS</h2>
                        <p class="m-0 text-secondary" style="font-size: var(--text-sm);">Sign in to your account</p>
                    </div>

                    <div class="card-body">
                        <EditForm Model="@loginRequest" OnValidSubmit="@HandleLogin" FormName="LoginForm" aria-labelledby="login-title">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <fieldset>
                                <legend id="login-title" class="sr-only">Login</legend>

                                <div class="form-group">
                                    <label for="username" class="form-label required">Username</label>
                                    <InputText id="username"
                                               autocomplete="username"
                                               @bind-Value="loginRequest.Username"
                                               class="form-control" />
                                    <ValidationMessage For="@(() => loginRequest.Username)" class="form-error" />
                                </div>

                                <div class="form-group">
                                    <label for="password" class="form-label required">Password</label>
                                    <InputText id="password"
                                               type="password"
                                               autocomplete="current-password"
                                               @bind-Value="loginRequest.Password"
                                               class="form-control" />
                                    <ValidationMessage For="@(() => loginRequest.Password)" class="form-error" />
                                </div>

                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <span class="sr-only" aria-live="polite">@statusText</span>
                                    <a href="/register" class="text-link" style="font-size: var(--text-sm);">
                                        Don't have an account? Sign up
                                    </a>
                                </div>

                                <button type="submit"
                                        class="btn btn-primary btn-block"
                                        disabled="@isLoading"
                                        aria-busy="@isLoading"
                                        aria-live="polite">
                                    @if (isLoading)
                                    {
                                        <span class="spinner spinner-sm me-2" aria-hidden="true"></span>
                                    }
                                    <span>@(isLoading ? "Signing in..." : "Sign in")</span>
                                </button>
                            </fieldset>
                        </EditForm>

                        @if (showError)
                        {
                            <div class="alert alert-error mt-3" role="alert">
                                <p class="alert-text m-0">
                                    <strong>Error: </strong>@errorMessage
                                </p>
                            </div>
                        }
                    </div>
                </div>

                <p class="text-center text-secondary mt-3" style="font-size: var(--text-sm);">
                    Â© @DateTime.UtcNow.Year OpenKMS
                </p>
            </div>
        </div>
    </div>
</section>

@code {
    private UserLoginRequest loginRequest = new();
    private bool isLoading = false;
    private bool showError = false;
    private string errorMessage = string.Empty;
    private string statusText => isLoading ? "Signing in..." : string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AuthService.InitializeAuthAsync();
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        showError = false;

        try
        {
            var response = await AuthService.LoginAsync(loginRequest);
            if (response != null)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Login failed. Please check your credentials.";
                showError = true;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
            showError = true;
        }
        finally
        {
            isLoading = false;
        }
    }
}